//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace WP7FileCopyClient.MyCopyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyCopyService.ICopyService")]
    public interface ICopyService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICopyService/CopyString", ReplyAction="http://tempuri.org/ICopyService/CopyStringResponse")]
        System.IAsyncResult BeginCopyString(string fileName, string contents, System.AsyncCallback callback, object asyncState);
        
        void EndCopyString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICopyService/CopyBytes", ReplyAction="http://tempuri.org/ICopyService/CopyBytesResponse")]
        System.IAsyncResult BeginCopyBytes(string fileName, byte[] contents, System.AsyncCallback callback, object asyncState);
        
        void EndCopyBytes(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICopyServiceChannel : WP7FileCopyClient.MyCopyService.ICopyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyServiceClient : System.ServiceModel.ClientBase<WP7FileCopyClient.MyCopyService.ICopyService>, WP7FileCopyClient.MyCopyService.ICopyService {
        
        private BeginOperationDelegate onBeginCopyStringDelegate;
        
        private EndOperationDelegate onEndCopyStringDelegate;
        
        private System.Threading.SendOrPostCallback onCopyStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyBytesDelegate;
        
        private EndOperationDelegate onEndCopyBytesDelegate;
        
        private System.Threading.SendOrPostCallback onCopyBytesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CopyServiceClient() {
        }
        
        public CopyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CopyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CopyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CopyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CopyStringCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CopyBytesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7FileCopyClient.MyCopyService.ICopyService.BeginCopyString(string fileName, string contents, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyString(fileName, contents, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WP7FileCopyClient.MyCopyService.ICopyService.EndCopyString(System.IAsyncResult result) {
            base.Channel.EndCopyString(result);
        }
        
        private System.IAsyncResult OnBeginCopyString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            string contents = ((string)(inValues[1]));
            return ((WP7FileCopyClient.MyCopyService.ICopyService)(this)).BeginCopyString(fileName, contents, callback, asyncState);
        }
        
        private object[] OnEndCopyString(System.IAsyncResult result) {
            ((WP7FileCopyClient.MyCopyService.ICopyService)(this)).EndCopyString(result);
            return null;
        }
        
        private void OnCopyStringCompleted(object state) {
            if ((this.CopyStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyStringCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyStringAsync(string fileName, string contents) {
            this.CopyStringAsync(fileName, contents, null);
        }
        
        public void CopyStringAsync(string fileName, string contents, object userState) {
            if ((this.onBeginCopyStringDelegate == null)) {
                this.onBeginCopyStringDelegate = new BeginOperationDelegate(this.OnBeginCopyString);
            }
            if ((this.onEndCopyStringDelegate == null)) {
                this.onEndCopyStringDelegate = new EndOperationDelegate(this.OnEndCopyString);
            }
            if ((this.onCopyStringCompletedDelegate == null)) {
                this.onCopyStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyStringCompleted);
            }
            base.InvokeAsync(this.onBeginCopyStringDelegate, new object[] {
                        fileName,
                        contents}, this.onEndCopyStringDelegate, this.onCopyStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7FileCopyClient.MyCopyService.ICopyService.BeginCopyBytes(string fileName, byte[] contents, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyBytes(fileName, contents, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WP7FileCopyClient.MyCopyService.ICopyService.EndCopyBytes(System.IAsyncResult result) {
            base.Channel.EndCopyBytes(result);
        }
        
        private System.IAsyncResult OnBeginCopyBytes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] contents = ((byte[])(inValues[1]));
            return ((WP7FileCopyClient.MyCopyService.ICopyService)(this)).BeginCopyBytes(fileName, contents, callback, asyncState);
        }
        
        private object[] OnEndCopyBytes(System.IAsyncResult result) {
            ((WP7FileCopyClient.MyCopyService.ICopyService)(this)).EndCopyBytes(result);
            return null;
        }
        
        private void OnCopyBytesCompleted(object state) {
            if ((this.CopyBytesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyBytesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyBytesAsync(string fileName, byte[] contents) {
            this.CopyBytesAsync(fileName, contents, null);
        }
        
        public void CopyBytesAsync(string fileName, byte[] contents, object userState) {
            if ((this.onBeginCopyBytesDelegate == null)) {
                this.onBeginCopyBytesDelegate = new BeginOperationDelegate(this.OnBeginCopyBytes);
            }
            if ((this.onEndCopyBytesDelegate == null)) {
                this.onEndCopyBytesDelegate = new EndOperationDelegate(this.OnEndCopyBytes);
            }
            if ((this.onCopyBytesCompletedDelegate == null)) {
                this.onCopyBytesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyBytesCompleted);
            }
            base.InvokeAsync(this.onBeginCopyBytesDelegate, new object[] {
                        fileName,
                        contents}, this.onEndCopyBytesDelegate, this.onCopyBytesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WP7FileCopyClient.MyCopyService.ICopyService CreateChannel() {
            return new CopyServiceClientChannel(this);
        }
        
        private class CopyServiceClientChannel : ChannelBase<WP7FileCopyClient.MyCopyService.ICopyService>, WP7FileCopyClient.MyCopyService.ICopyService {
            
            public CopyServiceClientChannel(System.ServiceModel.ClientBase<WP7FileCopyClient.MyCopyService.ICopyService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCopyString(string fileName, string contents, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = contents;
                System.IAsyncResult _result = base.BeginInvoke("CopyString", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCopyString(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CopyString", _args, result);
            }
            
            public System.IAsyncResult BeginCopyBytes(string fileName, byte[] contents, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = contents;
                System.IAsyncResult _result = base.BeginInvoke("CopyBytes", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCopyBytes(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CopyBytes", _args, result);
            }
        }
    }
}
